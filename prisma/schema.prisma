// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model NewCustomers {
  id         Int      @id @default(autoincrement())
  customerId String   @unique @map("customer_id")
  createdAt  DateTime @default(now()) @map("created_at")
  shopName   String   @map("shop_name")
  shopId     String   @map("shop_id")

  @@unique([customerId, shopName])
  @@map("new_customers")
}

model UserPageVisits {
  id               String    @id @default(cuid())
  customerId       String?   @map("customer_id")
  sessionId        String    @map("session_id")
  pageUrl          String    @map("page_url")
  pagePathName     String    @map("page_pathname")
  pageType         String    @map("page_type")
  browserInfo      String    @map("browser_info")
  shopName         String    @map("shop_name")
  shopId           String    @map("shop_id")
  visitedPageTitle String    @map("visited_page_title")
  productId        String?   @map("product_id")
  collectionId     String?   @map("collection_id")
  startTime        DateTime  @map("start_time")
  endTime          DateTime? @map("end_time")
  duration         Int?      @default(0)
  deviceType       String?   @map("device_type") // mobile, desktop, tablet
  referrer         String?   @map("referrer")
  ipAddress        String?   @map("ip_address")
  createdAt        DateTime  @default(now()) @map("created_at")

  @@index([customerId])
  @@index([sessionId])
  @@index([pageType])
  @@index([productId])
  @@index([shopId])
  @@map("user_page_visits")
}

enum RuleType {
  STORE_VISIT
  NEW_CUSTOMER
  PRODUCT_PURCHASE
}

model ShopRewardRules {
  id       String   @id @default(cuid())
  shopName String   @map("shop_name")
  shopId   String   @map("shop_id")
  ruleType RuleType @map("rule_type")

  ruleName String @map("rule_name")

  rewardPoints       Int @default(0) @map("reward_points")
  totalAwardedPoints Int @default(0) @map("total_awarded_points")
  totalAwaredCount   Int @default(0) @map("total_awarded_count")

  isActive Boolean @default(false) @map("is_active")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([shopId, ruleType])
}

model RewardedCustomrList {
  id         String @id @default(cuid())
  customerId String @map("customer_id")
  shopName   String @map("shop_name")
  shopId     String @map("shop_id")

  totalUsedPoints Int      @default(0) @map("total_used_points")
  availablePoints Int      @default(0) @map("available_points")
  createdAt       DateTime @default(now()) @map("created_at")

  @@unique([customerId, shopId])
}

enum TransactionType {
  EARN
  REDEEM
}

model RewardPointsTransactionHistory {
  id                    String          @id @default(cuid())
  customerId            String          @map("customer_id")
  shopId                String          @map("shop_id")
  totalTransactedPoints Int             @default(0) @map("total_transacted_points")
  ruleType              RuleType        @map("rule_type")
  transactionType       TransactionType @map("transaction_type")
  createdAt             DateTime        @default(now()) @map("created_at")

  @@map("reward_points_transaction_history")
}

model Coupons {
  id         String   @id @default(cuid())
  shopId     String   @map("shop_id")
  couponCode String   @unique @map("coupon_code")
  couponId   String   @unique @map("coupon_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  customerId String   @map("customer_id")

  @@index([shopId])
}

enum RedemptionRuleType {
  ORDER_DISCOUNT
}

model ShopRedemptionRules {
  id       String             @id @default(cuid())
  shopName String             @map("shop_name")
  shopId   String             @map("shop_id")
  ruleType RedemptionRuleType @map("rule_type")
  ruleName String             @map("rule_name")

  pointsRequiredForRedemption Int @map("points_required_for_redemption")
  discountPercentage          Int @map("discount_percentage")

  isActive Boolean @default(false) @map("is_active")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([shopId, ruleType])
  @@map("shop_redemption_rules")
}
